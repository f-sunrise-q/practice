server.port=8079
server.servlet.context-path=/serviceProvider

spring.application.name=provider
# eureka.client.registerWithEureka ：表示是否将自己注册到Eureka Server，默认为true。
# 由于当前这个应用就是Eureka Server，故而设为false
#eureka.client.register-with-eureka=true
## eureka.client.fetchRegistry ：表示是否从Eureka Server获取注册信息，默认为true。因为这是一个单点的Eureka Server，
## 不需要同步其他的Eureka Server节点的数据，故而设为false。
#eureka.client.fetch-registry=true

# eureka.client.serviceUrl.defaultZone ：设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址。
eureka.server.username=admin
eureka.server.password=123456
eureka.client.serviceUrl.defaultZone=http://${eureka.server.username}:${eureka.server.password}@127.0.0.1:8077/master/eureka
eureka.instance.hostname=127.0.0.1
spring.cloud.client.hostname=127.0.0.1
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.hostname}:${server.port}
#eureka.instance.prefer-ip-address=true

spring.cloud.config.discovery.enabled=true

spring.cloud.config.discovery.serviceId=master1

#server.servlet.path=/status
#eureka.instance.status-page-url-path=${server.servlet.path}/info
#eureka.instance.health-check-url-path=${server.servlet.path}/health
eureka.instance.metadata-map.management.context-path=${server.servlet.context-path}/actuator
eureka.instance.health-check-url=http://127.0.0.1:${server.port}${eureka.instance.metadata-map.management.context-path}/health
eureka.instance.status-page-url=http://127.0.0.1:${server.port}${eureka.instance.metadata-map.management.context-path}/info
eureka.instance.home-page-url=http://127.0.0.1:${server.port}/

#management.endpoints.web.exposure.include=refresh,health,info
management.endpoint.health.show-details=always

#表示100%将链路的数据上传给Zipkin Server
spring.sleuth.sampler.probability=1.0

spring.zipkin.enabled=true
spring.zipkin.baseUrl=http://127.0.0.1:8071/zipkin-server/